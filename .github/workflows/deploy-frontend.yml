name: Deploy Frontend to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js (build on runner)
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Create .env from secret (for build)
        if: secrets.FRONTEND_ENV_FILE != ''
        run: |
          echo "${{ secrets.FRONTEND_ENV_FILE }}" > .env

      - name: Install dependencies and build
        run: |
          npm ci
          npm run build

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Add EC2 host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Upload build to EC2 (scp)
        env:
          REMOTE_TMP: /tmp/frontend_dist_${{ github.run_id }}
        run: |
          # Create remote temp dir (ensures unique path)
          ssh ubuntu@${{ secrets.EC2_HOST }} "mkdir -p $REMOTE_TMP && rm -rf $REMOTE_TMP/*"
          # Copy files (use rsync if available; scp here for portability)
          scp -r dist/* ubuntu@${{ secrets.EC2_HOST }}:$REMOTE_TMP/

      - name: Deploy on EC2 (move files, permissions, reload nginx)
        env:
          REMOTE_TMP: /tmp/frontend_dist_${{ github.run_id }}
        run: |
          ssh ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
          set -e
          # Create destination and backup previous release (optional)
          sudo mkdir -p /var/www/frontend
          # Backup current site (keeps one previous copy)
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          sudo rm -rf /var/www/frontend/previous || true
          if [ -d /var/www/frontend ]; then
            sudo mv /var/www/frontend /var/www/frontend.previous.$TIMESTAMP || true
          fi
          sudo mkdir -p /var/www/frontend
          # Move new files from tmp to webroot
          REMOTE_TMP_DIR="${REMOTE_TMP}"
          sudo cp -r "$REMOTE_TMP_DIR"/* /var/www/frontend/
          sudo chown -R ubuntu:ubuntu /var/www/frontend
          # If you want .env on server (not required for static sites built on runner),
          # move it here with: sudo mv /tmp/.env /var/www/frontend/.env
          # Test and reload nginx
          sudo nginx -t
          sudo systemctl reload nginx || sudo systemctl restart nginx
          # Cleanup tmp
          rm -rf "$REMOTE_TMP_DIR"
          EOF
